{"version":3,"sources":["logo.svg","reducer/TodoList.js","store/index.js","Task.js","TodoList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","initialState","displayMode","windowSize","userInput","counter","list","id","content","isFinish","TodoList","state","arguments","length","undefined","action","type","newState","push","value","filter","item","map","Store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","Task","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleDelete","bind","assertThisInitialized","handleFinish","console","log","taskId","react_default","a","createElement","style","width","display","textDecoration","textAlign","onClick","button_default","size","marginRight","React","Component","getState","handleAdd","handleClear","handleChange","handleDisplayMode","handleChangeState","subscribe","todoTitle","document","querySelector","init","showCursor","strings","backDelay","setState","body","offsetWidth","addEventListener","handleResize","e","target","innerWidth","dispatch","event","getAttribute","_this2","Style","listInputStyle","margin","marginTop","fontSize","todolistStyle","height","backgroundColor","buttonStyle","paddingLeft","todolist","src_Task","marginBottom","list_default","header","footer","bordered","dataSource","renderItem","Item","input_default","onChange","mode","App","className","src_TodoList","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4eba90a6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","\nconst initialState = {\n    displayMode:\"normal\",\n    windowSize:1300,\n    userInput:\"\",\n    counter:3,\n    list:[\n        {\n            id:0,\n            content:\"This is my Todo list app\",\n            isFinish: false\n        },\n        {\n            id:1,\n            content:\"You can try to click the task to finish it\",\n            isFinish: false\n        }\n        ,\n        {\n            id:2,\n            content:\"And try different buttons to display different kind of tasks\",\n            isFinish: false\n        }\n\n    ]\n}\n\n\nfunction TodoList (state=initialState,action){\n    if(action.type === \"add_todo_task\"){\n        let newState = state;\n        newState.list.push(action.value);\n        newState.counter++;\n        newState.userInput = \"\";\n        return newState;\n    }\n\n    if(action.type === \"window_size_change\"){\n        let newState = state;\n        newState.windowSize = action.value;\n        return newState;\n    }\n\n    if(action.type === \"clear_all_task\"){\n        let newState = state;\n        newState.list = [];\n        newState.counter = 0;\n        return newState;\n    }\n\n    if(action.type === \"user_input_change\"){\n        let newState = state;\n        newState.userInput = action.value;\n        return newState;\n    }\n\n    if(action.type === \"task_delete\"){\n        let newState = state;\n        newState.list = newState.list.filter((item)=>{\n            return item.id !== action.value;\n        })\n        return newState;\n    }\n\n    if(action.type === \"finish_mode\"){\n        let newState = state;\n        newState.list = newState.list.map((item)=>{\n            if(item.id === action.value){\n                let newitem = {\n                    id:item.id,\n                    content:item.content,\n                    isFinish:!item.isFinish\n                }\n                 return newitem;\n             }else{\n                 return item;\n            }\n        })\n        return newState;\n    }\n\n    if(action.type === \"display_mode_change\"){\n        let newState = state;\n        newState.displayMode  = action.value;\n        return newState;\n    }\n    return state;\n}\n\nexport default TodoList;","import { createStore } from 'redux';\nimport TodoList from '../reducer/TodoList';\n\nlet Store = createStore(TodoList,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nexport default Store;\n\n","import React, {Component} from 'react';\nimport {Button} from \"antd\";\nimport Store from './store'\n\nclass Task extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.handleDelete = this.handleDelete.bind(this);\n        this.handleFinish = this.handleFinish.bind(this);\n    }\n\nhandleDelete(){\n    console.log(this.props.taskId)\n    this.props.handleDelete(this.props.taskId);\n}\n\nhandleFinish(){\n    this.props.handleFinish(this.props.taskId);\n}\n    render(){\n\n        return <div style={{width:\"100%\"}}>\n        <li style={this.props.isFinish === false?{display:\"inline-block\",width:\"80%\",textDecoration:\"none\",textAlign:\"left\"}:\n        {display:\"inline-block\",textDecoration:\"line-through\",textAlign:\"left\",width:\"80%\"}} onClick={this.handleFinish}>{this.props.content}</li>\n        <Button type=\"danger\" size=\"small\" onClick={this.handleDelete} style={{display:\"inline-block\",marginRight:\"0\"}}>delete</Button>\n        </div> \n    }\n}\n\nexport default Task;","import React, {Component} from 'react';\nimport Task from \"./Task\"\nimport {Input, Button, List} from \"antd\";\nimport {init} from \"ityped\";\nimport Store from './store'\n\n\nclass TodoList extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.state= Store.getState();\n        this.handleAdd = this.handleAdd.bind(this);\n        this.handleClear = this.handleClear.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleDelete = this.handleDelete.bind(this);\n        this.handleFinish = this.handleFinish.bind(this);\n        this.handleDisplayMode = this.handleDisplayMode.bind(this);\n        this.handleChangeState = this.handleChangeState.bind(this);\n\n        Store.subscribe(this.handleChangeState);\n    }\n    componentDidMount(){\n        const todoTitle = document.querySelector('#todoTitle')\n      init(todoTitle, { showCursor: false, strings: ['This is my Todo-list', 'Enjoy!' ],backDelay:  1500, })\n      this.setState({\n          windowSize: document.body.offsetWidth\n      })\n      window.addEventListener('resize', this.handleResize.bind(this))\n    }\n\n    handleChangeState(){\n        this.setState(Store.getState());\n    }\n\n    handleResize(e){\n        console.log('浏览器窗口大小改变事件', e.target.innerWidth)\n        const action = {\n            type: \"window_size_change\",\n            value: e.target.innerWidth\n        }\n        Store.dispatch(action);\n    }\n\n    handleAdd(){\n        const action = {\n            type: 'add_todo_task',\n            value: {\n                id: this.state.counter,\n                content:this.state.userInput,\n                isFinish:false\n                }\n        }\n        Store.dispatch(action);\n    }\n\n    handleClear(){\n        const action = {\n            type: \"clear_all_task\",\n            value: \"\"\n        }\n        Store.dispatch(action);\n    }\n\n    \n    handleChange(event){\n         const action = {\n             type: \"user_input_change\",\n             value: event.target.value\n         }\n        Store.dispatch(action);\n    }\n\n   handleDelete(taskId){\n        const action = {\n            type: \"task_delete\",\n            value: taskId,\n        }\n        Store.dispatch(action);\n   }\n\n   handleFinish(taskId){\n        const action = {\n            type: \"finish_mode\",\n            value: taskId\n        }\n        Store.dispatch(action);\n   }\n\n   handleDisplayMode(event){\n       const action = {\n           type: \"display_mode_change\",\n           value: event.target.getAttribute(\"mode\")\n       }\n\n       Store.dispatch(action);\n   }\n   \n    render(){\n        const Style = this.state.windowSize<770?\n        {\n            listInputStyle:{    \n                width: \"80%\",\n                display: \"block\",\n                margin: \"auto\",\n                marginTop: 20,\n                fontSize:\"16px\"\n            },\n            todolistStyle:{\n                height:\"100%\",\n                width: \"80%\",\n                margin: \"auto\",\n                backgroundColor:\"white\",\n                fontSize:\"16px\"\n            },\n            buttonStyle:{\n                marginRight:\"4px\",\n                width:\"15%\",\n                fontSize:10,\n                //textAlign:\"left\"\n                paddingLeft: 0\n            }\n        }:{\n            listInputStyle:{    \n                width: \"70%\",\n                display: \"block\",\n                margin: \"auto\",\n                marginTop: 20,\n                fontSize:\"18px\"\n            },\n            todolistStyle:{\n                height:\"100%\",\n                width: \"70%\",\n                margin: \"auto\",\n                backgroundColor:\"white\",\n                fontSize:\"18px\"\n            },\n            buttonStyle:{\n                marginRight:\"10px\"\n            }\n        }\n\n        const todolist = \n        this.state.displayMode === \"normal\"?this.state.list.map((item)=>{\n            return<Task taskId={item.id} content={item.content} handleDelete={this.handleDelete} \n       handleFinish={this.handleFinish} isFinish={item.isFinish}/>\n        }):\n        this.state.displayMode === \"finish\"?this.state.list.filter((item)=>{\n            return item.isFinish === true;\n        }).map((item)=>{\n            return<Task taskId={item.id} content={item.content} handleDelete={this.handleDelete} \n       handleFinish={this.handleFinish} isFinish={item.isFinish}/>\n        }):\n        this.state.list.filter((item)=>{\n            return item.isFinish === false;\n        }).map((item)=>{\n            return<Task taskId={item.id} content={item.content} handleDelete={this.handleDelete} \n       handleFinish={this.handleFinish} isFinish={item.isFinish}/>\n        })\n        \n\n        return (\n           \n            <div style={{backgroundColor:\"gray\",height:\"100%\"}}>\n                <h1>Todo-List</h1>\n                <div id=\"todoTitle\" style={{height:\"15px\",width:\"auto\",marginBottom:20, fontSize:20}}/>\n                <List\n                 style={Style.todolistStyle}\n                 header={<div>Displaying: {this.state.displayMode}</div>}\n                 footer={<div style={{marginBottom:\"20px\"}}>Todolist Version: v0.0.3</div>}\n                 bordered\n                 dataSource={todolist}\n                 renderItem={item => (\n                 <List.Item>{item}</List.Item>\n                 )}\n                  />\n                  \n                <Input style={Style.listInputStyle} type=\"string\" onChange={this.handleChange} value={this.state.userInput}></Input>\n                <div style={{marginTop: 10}}>\n                <Button style={Style.buttonStyle} onClick={this.handleAdd}>Add Todo</Button>\n                <Button style={Style.buttonStyle} onClick={this.handleClear}>clear</Button>\n                <Button style={Style.buttonStyle} onClick={this.handleDisplayMode} mode=\"normal\">show all</Button>\n                <Button style={Style.buttonStyle} onClick={this.handleDisplayMode} mode=\"unfinish\">show unfinish</Button>\n                <Button style={Style.buttonStyle} onClick={this.handleDisplayMode} mode=\"finish\">show finish</Button>\n                </div>\n             </div>\n        )\n    }\n}\n\nexport default TodoList;\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport TodoList from \"./TodoList\";\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <TodoList />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}